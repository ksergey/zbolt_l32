[gcode_macro POWER_OFF]
gcode:
  SET_PIN PIN=POWER VALUE=1

[gcode_macro M600]
gcode:
  PAUSE

[gcode_macro M601]
gcode:
  PAUSE

# [gcode_macro PRINT_START]
# description: The machine's routine for starting a print
#
# variable_probe_temp: 140
# variable_park_macro: 'SMART_PARK'   ; Parking macro for final heating of hotend. Leave as 'park_macro_here' to disable
# variable_purge_macro: 'LINE_PURGE'  ; Purging macro to prime nozzle before printing. Leave as 'purge_macro_here' to disable
#
# gcode:
#   {% set BED_TEMP = params.BED_TEMP|default(60)|float %}                ; Pull Bed temp params from gcode
#   {% set HOTEND_TEMP = params.EXTRUDER_TEMP|default(215)|float %}       ; Pull Extruder temp params from gcode
#
#   {% if printer.configfile.settings.probe is defined %}                 ; Check if a probe is configured
#     {% if printer.configfile.settings.z_tilt is defined %}              ; Check if the machine trams by tilting Z
#       {% set need_tram = True | abs %}
#       {% set tram_command = 'Z_TILT_ADJUST' %}
#     {% elif printer.configfile.settings.quad_gantry_level is defined %} ; Check if the machine trams by tilting the gantry
#       {% set need_tram = True | abs %}
#       {% set tram_command = 'QUAD_GANTRY_LEVEL' %}
#     {% else %}
#       {% set need_tram = False | abs %}                                 ; If no tramming config found, don't tram
#     {% endif %}
#     {% if printer.bed_mesh is defined %}                                ; Check if a bed mesh is configured
#       {% set need_mesh = True | abs %}
#     {% else %}
#       {% set need_mesh = False | abs %}                                 ; If no mesh configured, don't make a mesh
#     {% endif %}
#   {% endif %}
#
#   {% if printer.toolhead.homed_axes != 'xyz' %}                         ; Check homed status of machine and home axes if necessary
#     G28
#   {% endif %}
#
#   {% if printer.heater_bed.temperature < (BED_TEMP * 0.90) %}           ; Wait for bed to fully heat if target bed temp is less than 90% of desired temp,
#     M190 S{BED_TEMP}                                                    ; if it is within 90% of desired temp,
#   {% else %}                                                            ; set the bed temp without waiting
#     M140 S{BED_TEMP}
#   {% endif %}
#
#   {% if probe_temp > 0 %}
#     M109 S{probe_temp}                                                  ; Wait for hotend temp to stabilize at probing temperature
#   {% endif %}
#
#   {% if need_tram == True %}                                            ; Tram if needed
#     {tram_command}
#     G28 Z
#   {% endif %}
#
#   {% if need_mesh == True %}                                            ; Mesh if needed
#     BED_MESH_CALIBRATE
#   {% endif %}
#
#   {% if park_macro != 'park_macro_here' %}                              ; Park if configured
#     {park_macro}
#   {% endif %}
#
#   M109 S{HOTEND_TEMP}                                                   ; Heat nozzle to final temp
#
#   {% if purge_macro != 'purge_macro_here' %}                            ; Purge if configured
#     {purge_macro}
#   {% endif %}

[gcode_macro PRINT_START]
variable_probe_temp: 140

gcode:
  ; Get bed and extruder temperature from slicer GCode
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}

  ; Check homed status of machine and home axes if necessary
  {% if printer.toolhead.homed_axes != 'xyz' %}
    G28
  {% endif %}

  {% if printer.heater_bed.temperature < (BED_TEMP * 0.90) %}           ; Wait for bed to fully heat if target bed temp is less than 90% of desired temp,
    M190 S{BED_TEMP}                                                    ; if it is within 90% of desired temp,
  {% else %}                                                            ; set the bed temp without waiting
    M140 S{BED_TEMP}
  {% endif %}

  ; Wait for hotend temp to stabilize at probing temperature
  M109 S{probe_temp}                                                  ; Wait for hotend temp to stabilize at probing temperature

  ; Mesh
  BED_MESH_CALIBRATE

  ; Park head (KAMP)
  SMART_PARK

  ; Heat nozzle to final temp
  M109 S{HOTEND_TEMP}

  ; Purge
  LINE_PURGE

[gcode_macro PRINT_END]
gcode:
  M400              ; Wait for gcode commands buffer clear
  G91               ; Enable absolute coordinates
  G1 E-5 F300       ; Retract 5mm
  G1 Z+8 E-5  F5000 ; Move nozzle up and retract 5mm
  G90               ; Enable absolute coordinates
  G28 X0 Y0         ; Home x, y
  TURN_OFF_HEATERS
  M106 S255         ; Set fan speed to 100%
  M109 R60          ; Set and wait for nozzle to reach temperature
  M107              ; Turn off fan
  M84               ; Turn off motors

  # Power off printer
  ; POWER_OFF

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
variable_extrude: 1.0
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X10 Y10 F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  G92
  G1 Z5
  G28 X Y
  RESTART

[gcode_macro LOAD_FILAMENT]
description: A macro that performs the function of loading a filament.
gcode:
  SAVE_GCODE_STATE NAME=load
  {% set cur_temp = printer[printer.toolhead.extruder].temperature|float %}
  {% set target_temp = printer[printer.toolhead.extruder].target|float %}
  {% if cur_temp < target_temp %}
      {% set wait_temp = target_temp %}
  {% else %}
      {% set wait_temp = cur_temp %}
  {% endif %}
  {% if wait_temp < 210 %}
      {% set wait_temp = 210 %}
  {% else %}
  {% endif %}
  M104 S{wait_temp}
  TEMPERATURE_WAIT SENSOR={printer.toolhead.extruder} MINIMUM={wait_temp}
  M82
  G92 E0
  G1 E20 F600
  G1 E100 F1000
  G1 E130 F300
  G1 E150 F150
  G92 E0
  RESTORE_GCODE_STATE NAME=load

[gcode_macro UNLOAD_FILAMENT]
description: A macro that performs the function of unloading a filament.
gcode:
  SAVE_GCODE_STATE NAME=unload
  {% set cur_temp = printer[printer.toolhead.extruder].temperature|float %}
  {% set target_temp = printer[printer.toolhead.extruder].target|float %}
  {% if cur_temp < target_temp %}
      {% set wait_temp = target_temp %}
  {% else %}
      {% set wait_temp = cur_temp %}
  {% endif %}
  {% if wait_temp < 210 %}
      {% set wait_temp = 210 %}
  {% else %}
  {% endif %}
  M104 S{wait_temp}
  TEMPERATURE_WAIT SENSOR={printer.toolhead.extruder} MINIMUM={wait_temp}
  M82
  G92 E0
  G1 E10 F200
  G1 E-10 F1000
  G1 E-30 F200
  G1 E-150 F1000
  G92 E0
  RESTORE_GCODE_STATE NAME=unload
